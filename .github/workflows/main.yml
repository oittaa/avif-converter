# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - uses: psf/black@stable

  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [linux/amd64, linux/arm64]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.1.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.4.0
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-build-x-${{ matrix.arch }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-x-${{ matrix.arch }}-
      - name: Build
        uses: docker/build-push-action@v6.4.0
        with:
          platforms: ${{ matrix.arch }}
          context: ./app
          file: ./app/Dockerfile  
          push: false
          load: true
          tags: oittaa/avif-converter:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
      -
        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
        name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
      - name: Docker container up
        run: docker run -d --rm -p 8080:8080 --env PORT=8080 --name avif-converter oittaa/avif-converter
      - name: Wait 10 seconds
        run: sleep 10
      - name: Check running containers
        run: docker ps -a
      - name: Check the container web page reachability
        run: curl --output /dev/null -s --retry 10 --retry-connrefused http://localhost:8080/
      - name: Check the container API reachability
        run: curl --output /dev/null -s -L -F "file=@test_images/test.png" http://localhost:8080/api
      - name: Check Docker logs
        run: docker logs avif-converter
      - name: Copy coverage
        run: docker cp avif-converter:/app/coverage.xml coverage.xml
      - name: Docker container down
        run: docker stop avif-converter
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          flags: unittests
